* Elixir Traffic Light Client
** Deployment
Note that all required environment variables are automatically set with [[https://direnv.net/][direnv]] and a ~.env~ file.

*** Initial Deployment (or Offline Deployment)
#+begin_src sh
mix deps.get
mix firmware
mix firmware.burn
#+end_src
*** Follow up deployments
#+begin_src sh
mix firmware
./upload.sh
#+end_src
** Debugging and introspection
*** SSH into running client
Note that the client has to be in the same network ;)

#+begin_src sh
ssh nerves.local
#+end_src
*** Check outside connections from iex
#+begin_src elixir
tping 'google.com'
#+end_src
*** Get network information
#+begin_src elixir
Nerves.Network.status("wlan0")
#+end_src
*** Looking into the GenServer that updates the traffic light
First, you have to enable debugging of the genserver.

#+begin_src elixir
TrafficLightClient.Updater.enable_debug
#+end_src

Then you can use the following statements to introspect the process and look at the state.

#+begin_src elixir
:sys.get_status(UpdaterLink)
:sys.statistics(UpdaterLink, :get)
:sys.get_state(UpdaterLink)
#+end_src
** More Information
- [[https://hexdocs.pm/nerves/getting-started.html#connecting-to-your-nerves-target][Nerves getting started]]
- [[https://hexdocs.pm/nerves_init_gadget/readme.html#configuration][Tutorial nerves_init_gadget]]
- [[https://hexdocs.pm/nerves_network/readme.html#installation-and-setup][Network wlan setup]]
- [[https://github.com/nerves-project/nerves_examples/blob/master/hello_gpio/lib/hello_gpio.ex][Nerves GPIO example]]
- [[https://github.com/elixir-circuits/circuits_gpio][Circuits GPIO lib]]
